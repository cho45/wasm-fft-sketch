(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[1],{

/***/ "../pkg/wa_dsp.js":
/*!************************!*\
  !*** ../pkg/wa_dsp.js ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(Buffer) {let wasm;\nconst { TextDecoder } = __webpack_require__(/*! util */ \"./node_modules/util/util.js\");\n\nlet WASM_VECTOR_LEN = 0;\n\nlet cachegetNodeBufferMemory = null;\nfunction getNodeBufferMemory() {\n    if (cachegetNodeBufferMemory === null || cachegetNodeBufferMemory.buffer !== wasm.memory.buffer) {\n        cachegetNodeBufferMemory = Buffer.from(wasm.memory.buffer);\n    }\n    return cachegetNodeBufferMemory;\n}\n\nfunction passStringToWasm(arg) {\n\n    const size = Buffer.byteLength(arg);\n    const ptr = wasm.__wbindgen_malloc(size);\n    getNodeBufferMemory().write(arg, ptr, size);\n    WASM_VECTOR_LEN = size;\n    return ptr;\n}\n/**\n* @param {string} name\n* @returns {void}\n*/\nmodule.exports.greet = function(name) {\n    const ptr0 = passStringToWasm(name);\n    const len0 = WASM_VECTOR_LEN;\n    try {\n        return wasm.greet(ptr0, len0);\n\n    } finally {\n        wasm.__wbindgen_free(ptr0, len0 * 1);\n\n    }\n\n};\n\nlet cachegetFloat32Memory = null;\nfunction getFloat32Memory() {\n    if (cachegetFloat32Memory === null || cachegetFloat32Memory.buffer !== wasm.memory.buffer) {\n        cachegetFloat32Memory = new Float32Array(wasm.memory.buffer);\n    }\n    return cachegetFloat32Memory;\n}\n\nfunction passArrayF32ToWasm(arg) {\n    const ptr = wasm.__wbindgen_malloc(arg.length * 4);\n    getFloat32Memory().set(arg, ptr / 4);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n/**\n* @param {Float32Array} x\n* @returns {number}\n*/\nmodule.exports.sumtyped = function(x) {\n    const ptr0 = passArrayF32ToWasm(x);\n    const len0 = WASM_VECTOR_LEN;\n    try {\n        return wasm.sumtyped(ptr0, len0);\n\n    } finally {\n        wasm.__wbindgen_free(ptr0, len0 * 4);\n\n    }\n\n};\n\n/**\n* @param {Float32Array} x\n* @returns {void}\n*/\nmodule.exports.double = function(x) {\n    const ptr0 = passArrayF32ToWasm(x);\n    const len0 = WASM_VECTOR_LEN;\n    try {\n        return wasm.double(ptr0, len0);\n\n    } finally {\n        x.set(getFloat32Memory().subarray(ptr0 / 4, ptr0 / 4 + len0));\n        wasm.__wbindgen_free(ptr0, len0 * 4);\n\n    }\n\n};\n\n/**\n* @param {Float32Array} input_\n* @param {Float32Array} output_\n* @param {boolean} inverse\n* @returns {void}\n*/\nmodule.exports.fft = function(input_, output_, inverse) {\n    const ptr0 = passArrayF32ToWasm(input_);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passArrayF32ToWasm(output_);\n    const len1 = WASM_VECTOR_LEN;\n    try {\n        return wasm.fft(ptr0, len0, ptr1, len1, inverse);\n\n    } finally {\n        input_.set(getFloat32Memory().subarray(ptr0 / 4, ptr0 / 4 + len0));\n        wasm.__wbindgen_free(ptr0, len0 * 4);\n        output_.set(getFloat32Memory().subarray(ptr1 / 4, ptr1 / 4 + len1));\n        wasm.__wbindgen_free(ptr1, len1 * 4);\n\n    }\n\n};\n\nlet cachedTextDecoder = new TextDecoder('utf-8');\n\nlet cachegetUint8Memory = null;\nfunction getUint8Memory() {\n    if (cachegetUint8Memory === null || cachegetUint8Memory.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory;\n}\n\nfunction getStringFromWasm(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory().subarray(ptr, ptr + len));\n}\n\nmodule.exports.__wbg_alert_43ea33f8c1493c5b = function(arg0, arg1) {\n    let varg0 = getStringFromWasm(arg0, arg1);\n    alert(varg0);\n};\n\nmodule.exports.__wbg_log_ed66f225a9d068a5 = function(arg0, arg1) {\n    let varg0 = getStringFromWasm(arg0, arg1);\n    console.log(varg0);\n};\nwasm = __webpack_require__(/*! ./wa_dsp_bg */ \"../pkg/wa_dsp_bg.wasm\");\n\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../site/node_modules/buffer/index.js */ \"./node_modules/buffer/index.js\").Buffer))\n\n//# sourceURL=webpack:///../pkg/wa_dsp.js?");

/***/ }),

/***/ "../pkg/wa_dsp_bg.wasm":
/*!*****************************!*\
  !*** ../pkg/wa_dsp_bg.wasm ***!
  \*****************************/
/*! exports provided: memory, greet, sumtyped, double, fft, __wbindgen_malloc, __wbindgen_free */
/***/ (function(module, exports, __webpack_require__) {

eval("\"use strict\";\n// Instantiate WebAssembly module\nvar wasmExports = __webpack_require__.w[module.i];\n__webpack_require__.r(exports);\n// export exports from WebAssembly module\nfor(var name in wasmExports) if(name != \"__webpack_init__\") exports[name] = wasmExports[name];\n// exec imports from WebAssembly module (for esm order)\n/* harmony import */ var m0 = __webpack_require__(/*! ./wa_dsp.js */ \"../pkg/wa_dsp.js\");\n/* harmony import */ var m0_default = /*#__PURE__*/__webpack_require__.n(m0);\n\n\n// exec wasm module\nwasmExports[\"__webpack_init__\"]()\n\n//# sourceURL=webpack:///../pkg/wa_dsp_bg.wasm?");

/***/ })

}]);